How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I was able to compare code that worked to code that didn't work and compare the differences between them. Once we narrowed our view down to code that was different between working and non-working, the bug was easier to find.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It would be easier to experiment with different programming techniques, as you could easily compare said techniques. It would also be easier to see general trends in your programming.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually choosing when to create a commit means that you can choose the size of your commits so that you don't have commit that are too big, or too small, or that aren't runnable. On othe other hand, 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because some VCSs are geared towards files that are highly interconnected, such as programs, whereas others are geared towards files that are more independent, such as individual stories and word documents. In the first case, it's more likely that if you're reverting to a version of one file, you'll want to revert to the same version of other files at the same time.

How can you use the commands git log and git diff to view the history of files?

    git log will give you an overview of the changes made in various versions of the file, while git diff will give you specific differences between different points in the repository's history.

How might using version control make you more confident to make changes that
could break something?

    By making you confident that any breaking changes can be reverted back to a safe state. In addition, you would also know that even if a bug isn't detected until later, it's possible to backtrack through the changes until you can find a version of the code without the bug and then compare the bug-free versions with the bugged versions.

Now that you have your workspace set up, what do you want to try using Git for?

    Programming, mostly. Possibly fanfiction writing, but I haven't decided as yet.